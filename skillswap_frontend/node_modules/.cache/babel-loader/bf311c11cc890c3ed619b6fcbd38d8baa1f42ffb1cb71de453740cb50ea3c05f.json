{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8000/api';\n\n// Configure axios to include auth token\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Token ${token}`;\n  }\n  return config;\n});\n\n// User API\nexport const userAPI = {\n  register: async data => {\n    const response = await axios.post(`${API_BASE_URL}/users/register/`, data);\n    return response.data;\n  },\n  login: async data => {\n    const response = await axios.post(`${API_BASE_URL}/users/login/`, data);\n    return response.data;\n  },\n  getProfile: async () => {\n    const response = await axios.get(`${API_BASE_URL}/users/me/`);\n    return response.data;\n  }\n};\n\n// Auth API (alias for userAPI)\nexport const authAPI = userAPI;\n\n// Profiles API (alias for userAPI)\nexport const profilesAPI = userAPI;\n\n// Skill API\nexport const skillsAPI = {\n  getAll: async () => {\n    const response = await axios.get(`${API_BASE_URL}/skills/`);\n    return response.data;\n  },\n  getSkills: async params => {\n    const response = await axios.get(`${API_BASE_URL}/skills/`, {\n      params\n    });\n    return response.data;\n  },\n  create: async data => {\n    const response = await axios.post(`${API_BASE_URL}/skills/`, data);\n    return response.data;\n  },\n  createSkill: async data => {\n    const response = await axios.post(`${API_BASE_URL}/skills/`, data);\n    return response.data;\n  },\n  update: async (id, data) => {\n    const response = await axios.put(`${API_BASE_URL}/skills/${id}/`, data);\n    return response.data;\n  },\n  delete: async id => {\n    const response = await axios.delete(`${API_BASE_URL}/skills/${id}/`);\n    return response.data;\n  },\n  deleteSkill: async id => {\n    const response = await axios.delete(`${API_BASE_URL}/skills/${id}/`);\n    return response.data;\n  }\n};\n\n// Swap Request API\nexport const swapRequestsAPI = {\n  getAll: () => axios.get(`${API_BASE_URL}/swap-requests/`),\n  create: data => axios.post(`${API_BASE_URL}/swap-requests/`, data),\n  accept: id => axios.post(`${API_BASE_URL}/swap-requests/${id}/accept/`),\n  reject: id => axios.post(`${API_BASE_URL}/swap-requests/${id}/reject/`)\n};\n\n// Swaps API (alias for swapRequestsAPI)\nexport const swapsAPI = swapRequestsAPI;\n\n// Chat API\nexport const chatsAPI = {\n  getAll: () => axios.get(`${API_BASE_URL}/chats/`),\n  getChats: () => axios.get(`${API_BASE_URL}/chats/`),\n  getMessages: chatId => axios.get(`${API_BASE_URL}/messages/?chat_id=${chatId}`),\n  createMessage: data => axios.post(`${API_BASE_URL}/messages/`, data)\n};\n\n// Meeting API\nexport const meetingsAPI = {\n  getAll: () => axios.get(`${API_BASE_URL}/meetings/`),\n  getMeetings: () => axios.get(`${API_BASE_URL}/meetings/`),\n  create: data => axios.post(`${API_BASE_URL}/meetings/`, data),\n  createMeeting: data => axios.post(`${API_BASE_URL}/meetings/`, data),\n  start: id => axios.post(`${API_BASE_URL}/meetings/${id}/start/`),\n  startMeeting: id => axios.post(`${API_BASE_URL}/meetings/${id}/start/`),\n  join: id => axios.post(`${API_BASE_URL}/meetings/${id}/join/`),\n  joinMeeting: id => axios.post(`${API_BASE_URL}/meetings/${id}/join/`),\n  end: id => axios.post(`${API_BASE_URL}/meetings/${id}/end/`),\n  cancel: id => axios.post(`${API_BASE_URL}/meetings/${id}/cancel/`)\n};\n\n// Messages API\nexport const messagesAPI = {\n  getMessages: chatId => axios.get(`${API_BASE_URL}/messages/?chat_id=${chatId}`),\n  createMessage: data => axios.post(`${API_BASE_URL}/messages/`, data)\n};\n\n// Notification API\nexport const notificationsAPI = {\n  getAll: () => axios.get(`${API_BASE_URL}/notifications/`),\n  markAsRead: id => axios.post(`${API_BASE_URL}/notifications/${id}/mark_as_read/`),\n  markAllAsRead: () => axios.post(`${API_BASE_URL}/notifications/mark_all_as_read/`),\n  getUnreadCount: () => axios.get(`${API_BASE_URL}/notifications/unread_count/`),\n  clearAll: () => axios.delete(`${API_BASE_URL}/notifications/clear_all/`)\n};","map":{"version":3,"names":["axios","API_BASE_URL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","userAPI","register","data","response","post","login","getProfile","get","authAPI","profilesAPI","skillsAPI","getAll","getSkills","params","create","createSkill","update","id","put","delete","deleteSkill","swapRequestsAPI","accept","reject","swapsAPI","chatsAPI","getChats","getMessages","chatId","createMessage","meetingsAPI","getMeetings","createMeeting","start","startMeeting","join","joinMeeting","end","cancel","messagesAPI","notificationsAPI","markAsRead","markAllAsRead","getUnreadCount","clearAll"],"sources":["C:/Users/soham_jhyepxn/Desktop/skill-swap/Skill-Swap_Access_Denied/skillswap_frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { \r\n  UserProfile, \r\n  Skill, \r\n  SwapRequest, \r\n  AuthResponse, \r\n  LoginForm, \r\n  RegisterForm, \r\n  SkillFormType, \r\n  SwapRequestForm,\r\n  Chat,\r\n  Message,\r\n  MessageForm,\r\n  Meeting,\r\n  MeetingForm,\r\n  Notification\r\n} from '../types';\r\n\r\nconst API_BASE_URL = 'http://localhost:8000/api';\r\n\r\n// Configure axios to include auth token\r\naxios.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Token ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// User API\r\nexport const userAPI = {\r\n  register: async (data: { username: string; email: string; password: string }) => {\r\n    const response = await axios.post(`${API_BASE_URL}/users/register/`, data);\r\n    return response.data;\r\n  },\r\n  \r\n  login: async (data: { username: string; password: string }) => {\r\n    const response = await axios.post(`${API_BASE_URL}/users/login/`, data);\r\n    return response.data;\r\n  },\r\n  \r\n  getProfile: async () => {\r\n    const response = await axios.get(`${API_BASE_URL}/users/me/`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Auth API (alias for userAPI)\r\nexport const authAPI = userAPI;\r\n\r\n// Profiles API (alias for userAPI)\r\nexport const profilesAPI = userAPI;\r\n\r\n// Skill API\r\nexport const skillsAPI = {\r\n  getAll: async () => {\r\n    const response = await axios.get(`${API_BASE_URL}/skills/`);\r\n    return response.data;\r\n  },\r\n  getSkills: async (params?: any) => {\r\n    const response = await axios.get(`${API_BASE_URL}/skills/`, { params });\r\n    return response.data;\r\n  },\r\n  create: async (data: { name: string; description: string }) => {\r\n    const response = await axios.post(`${API_BASE_URL}/skills/`, data);\r\n    return response.data;\r\n  },\r\n  createSkill: async (data: { name: string; description: string }) => {\r\n    const response = await axios.post(`${API_BASE_URL}/skills/`, data);\r\n    return response.data;\r\n  },\r\n  update: async (id: number, data: any) => {\r\n    const response = await axios.put(`${API_BASE_URL}/skills/${id}/`, data);\r\n    return response.data;\r\n  },\r\n  delete: async (id: number) => {\r\n    const response = await axios.delete(`${API_BASE_URL}/skills/${id}/`);\r\n    return response.data;\r\n  },\r\n  deleteSkill: async (id: number) => {\r\n    const response = await axios.delete(`${API_BASE_URL}/skills/${id}/`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Swap Request API\r\nexport const swapRequestsAPI = {\r\n  getAll: () => axios.get(`${API_BASE_URL}/swap-requests/`),\r\n  create: (data: { to_user: number; from_skill: number; to_skill: number; message?: string }) =>\r\n    axios.post(`${API_BASE_URL}/swap-requests/`, data),\r\n  accept: (id: number) => axios.post(`${API_BASE_URL}/swap-requests/${id}/accept/`),\r\n  reject: (id: number) => axios.post(`${API_BASE_URL}/swap-requests/${id}/reject/`),\r\n};\r\n\r\n// Swaps API (alias for swapRequestsAPI)\r\nexport const swapsAPI = swapRequestsAPI;\r\n\r\n// Chat API\r\nexport const chatsAPI = {\r\n  getAll: () => axios.get(`${API_BASE_URL}/chats/`),\r\n  getChats: () => axios.get(`${API_BASE_URL}/chats/`),\r\n  getMessages: (chatId: number) => axios.get(`${API_BASE_URL}/messages/?chat_id=${chatId}`),\r\n  createMessage: (data: { chat: number; content: string }) =>\r\n    axios.post(`${API_BASE_URL}/messages/`, data),\r\n};\r\n\r\n// Meeting API\r\nexport const meetingsAPI = {\r\n  getAll: () => axios.get(`${API_BASE_URL}/meetings/`),\r\n  getMeetings: () => axios.get(`${API_BASE_URL}/meetings/`),\r\n  create: (data: any) => axios.post(`${API_BASE_URL}/meetings/`, data),\r\n  createMeeting: (data: any) => axios.post(`${API_BASE_URL}/meetings/`, data),\r\n  start: (id: number) => axios.post(`${API_BASE_URL}/meetings/${id}/start/`),\r\n  startMeeting: (id: number) => axios.post(`${API_BASE_URL}/meetings/${id}/start/`),\r\n  join: (id: number) => axios.post(`${API_BASE_URL}/meetings/${id}/join/`),\r\n  joinMeeting: (id: number) => axios.post(`${API_BASE_URL}/meetings/${id}/join/`),\r\n  end: (id: number) => axios.post(`${API_BASE_URL}/meetings/${id}/end/`),\r\n  cancel: (id: number) => axios.post(`${API_BASE_URL}/meetings/${id}/cancel/`),\r\n};\r\n\r\n// Messages API\r\nexport const messagesAPI = {\r\n  getMessages: (chatId: number) => axios.get(`${API_BASE_URL}/messages/?chat_id=${chatId}`),\r\n  createMessage: (data: { chat: number; content: string }) =>\r\n    axios.post(`${API_BASE_URL}/messages/`, data),\r\n};\r\n\r\n// Notification API\r\nexport const notificationsAPI = {\r\n  getAll: () => axios.get(`${API_BASE_URL}/notifications/`),\r\n  markAsRead: (id: number) => axios.post(`${API_BASE_URL}/notifications/${id}/mark_as_read/`),\r\n  markAllAsRead: () => axios.post(`${API_BASE_URL}/notifications/mark_all_as_read/`),\r\n  getUnreadCount: () => axios.get(`${API_BASE_URL}/notifications/unread_count/`),\r\n  clearAll: () => axios.delete(`${API_BASE_URL}/notifications/clear_all/`),\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}